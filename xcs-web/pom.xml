<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.xwikisas</groupId>
    <artifactId>xcs</artifactId>
    <version>2016-3</version>
  </parent>
  <artifactId>xcs-web</artifactId>
  <name>XWiki Collaboration Suite - Web</name>
  <packaging>war</packaging>
  <description>XWiki Collaboration Suite - Web</description>
  <properties>
    <xwiki.war.legacy.excludes>
      <!-- Exclude from war non legacy modules that have legacy modules wrapping them -->
      WEB-INF/lib/xwiki-commons-component-api-*.jar,
      WEB-INF/lib/xwiki-commons-component-default-*.jar,
      WEB-INF/lib/xwiki-rendering-api-*.jar,
      WEB-INF/lib/xwiki-platform-crypto-script-*.jar,
      WEB-INF/lib/xwiki-platform-oldcore-*.jar,
      WEB-INF/lib/xwiki-platform-office-importer-*.jar,
      WEB-INF/lib/xwiki-platform-rendering-macro-include-*.jar,
    </xwiki.war.legacy.excludes>

    <!-- We embed XWiki Enterprise -->
    <xwiki.extension.features>org.xwiki.enterprise:xwiki-enterprise-web</xwiki.extension.features>

    <!-- The default UIs associated with this WAR -->
    <!-- Main wiki UI -->
    <xwiki.extension.distribution.ui>com.xwikisas:xcs-ui-mainwiki</xwiki.extension.distribution.ui>
    <!-- (Sub)wiki UI -->
    <xwiki.extension.distribution.wikiui>com.xwikisas:xcs-ui-wiki</xwiki.extension.distribution.wikiui>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.xwiki.enterprise</groupId>
      <artifactId>xwiki-enterprise-web</artifactId>
      <version>${enterprise.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>com.xwikisas</groupId>
      <artifactId>xcs-repositories-releases</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- Needed here because it overrides a Script Service used by DW to determine what is the extension to install
         during the upgrade -->
    <dependency>
      <groupId>org.xwiki.contrib</groupId>
      <artifactId>application-wikiflavor-api</artifactId>
      <version>${wikiflavorapplication.version}</version>
      <exclusions>
        <exclusion>
          <groupId>jdom</groupId>
          <artifactId>jdom</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Inject XWiki's configuration (only xwiki.cfg, not hibernate.cfg.xml) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>xwiki-configuration-resources</id>
          </execution>
        </executions>
      </plugin>
      <!-- Unpack XE-WEB so we can modify its configuration (LESS cache purging) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <!-- Unpack the XE war-->
                <artifactItem>
                  <groupId>org.xwiki.enterprise</groupId>
                  <artifactId>xwiki-enterprise-web</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/xe-web</outputDirectory>
                  <includes>**/infinispan/config.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <basedir>${basedir}/target/</basedir>
          <filesToInclude>maven-shared-archive-resources/xwiki.properties,xe-web/WEB-INF/cache/infinispan/config.xml</filesToInclude>
          <regex>false</regex>
          <commentsEnabled>false</commentsEnabled>
          <replacements>
            <!-- Add the XWiki SAS repository to the comment about default extension repositories in xwiki.properties -->
            <replacement>
              <token>#-# When not set the following is taken:
# extension.repositories=maven-xwiki:maven:http://nexus.xwiki.org/nexus/content/groups/public
# extension.repositories=extensions.xwiki.org:xwiki:http://extensions.xwiki.org/xwiki/rest/</token>
              <value>#-# When not set the following is taken:
# extension.repositories=maven-xwiki:maven:http://nexus.xwiki.org/nexus/content/groups/public
# extension.repositories=extensions.xwiki.org:xwiki:http://extensions.xwiki.org/xwiki/rest/
# extension.repositories=maven-xwikisas:maven:http://nexus.xwikisas.com/nexus/content/groups/xcs/</value>
            </replacement>
            <!-- Purging of the LESS cache should be turned off -->
            <replacement>
              <token><![CDATA[<local-cache name="lesscss.skinfiles.cache">
        <persistence>
           <file-store purge="true">]]></token>
              <value><![CDATA[<local-cache name="lesscss.skinfiles.cache">
        <persistence>
           <file-store purge="false">]]></value>
            </replacement>
            <!-- Change a configuration to be more appropriate for XWiki SAS infrastructure -->
            <replacement>
              <token># lesscss.maximumSimultaneousCompilations = 4</token>
              <value>lesscss.maximumSimultaneousCompilations = 2</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <!-- Include License resources -->
            <resource>
              <directory>${project.build.directory}/maven-shared-archive-resources/META-INF</directory>
              <targetPath>META-INF</targetPath>
            </resource>
            <!-- Include configuration resources -->
            <resource>
              <directory>${project.build.directory}/maven-shared-archive-resources</directory>
              <targetPath>WEB-INF</targetPath>
              <includes>
                <include>xwiki.cfg</include>
                <include>xwiki.properties</include>
              </includes>
            </resource>
            <!-- Include version.properties file -->
            <resource>
              <directory>${basedir}/src/main/webInfResources</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
            </resource>
            <!-- Include modified XE-WEB configuration (about the LESS cache purging) -->
            <resource>
              <directory>${basedir}/target/xe-web</directory>
              <targetPath>/</targetPath>
            </resource>
          </webResources>
          <!-- - Exclude JCL and LOG4J since we want all logging to go through SLF4J. Note that we're excluding
                 log4j-<version>.jar but keeping log4j-over-slf4j-<version>.jar
               - Exclude legacy modules if the legacy profile is not enabled so that we don't have both aspectified JAR
                 and non aspectified ones
               - Exclude JavaBeans Activation Framework (activation-*.jar) since it's included in Java SE 6.
               - Exclude JAXB since it's included in Java SE 6
               - Exclude STAX API since it's included in Java SE 6
               - Exclude all XAR files from being placed in WEB-INF/lib. This is done by the WAR plugin which supports
                 XAR files (not our format, some other format! See https://jira.codehaus.org/browse/MWAR-281). The
                 reason we have XAR files in our dependencies is because we've added them in order to automatically
                 bundle all JAR files which are dependencies of XAR modules!
          -->
          <packagingExcludes>
            ${xwiki.war.legacy.excludes}
            WEB-INF/lib/commons-logging-*.jar,
            %regex[WEB-INF/lib/log4j-(?!over-slf4j).*.jar],
            WEB-INF/lib/activation-*.jar,
            WEB-INF/lib/jaxb-impl-*.jar,
            WEB-INF/lib/jaxb-api-*.jar,
            WEB-INF/lib/stax-api-*.jar,
            WEB-INF/extensions/*.xar
            WEB-INF/lib/bootstrap-2.3.2.jar
          </packagingExcludes>
        </configuration>
      </plugin>
      <!-- Ensure that some modules are not added as dependencies. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>org.jmock:*</exclude>
                    <exclude>junit:*</exclude>
                    <exclude>javax.servlet:servlet-api:*:*:compile</exclude>
                  </excludes>
                  <includes>
                    <!-- Allow only JUnit and JMock with scope test because -->
                    <include>org.jmock:*:*:*:test</include>
                    <include>junit:*:*:*:test</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <!-- Override check from top level POM that prevents depending on a legacy module since we want to package
               Legacy modules in the generated XEM product -->
          <execution>
            <id>enforce-no-legacy-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <xwikiBannedDependencies implementation="org.xwiki.tool.enforcer.XWikiBannedDependencies">
                  <searchTransitive>true</searchTransitive>
                  <excludes>
                    <!-- Override the value from the top level POM with a value that'll not ban any dependency -->
                    <exclude>alwaysok</exclude>
                  </excludes>
                </xwikiBannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Ensure we don't have duplicates in WEB-INF/lib -->
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
              <exceptions>
                <!-- Xalan bundles a lot of other projects: org/apache/xml/**, org/apache/bcel/**, JLex/**,
                     java_cup/**, org/apache/regexp/**. In addition, it even has these jars in its source tree without
                     any indication about their versions... Thus there's isn't much we can do ATM but it means there's
                     an uncertainty about which version of those classes are used at runtime.
                     TODO: Find an alternative to Xalan or find a good maven packaging of it -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>xalan</groupId>
                      <artifactId>xalan</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>jakarta-regexp</groupId>
                      <artifactId>jakarta-regexp</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <packages>
                    <package>org.apache.regexp</package>
                  </packages>
                </exception>
                <!-- css4j:0.13 depends on jclf:2.3.0 so the duplicate classes must be the same ones. -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>info.informatica</groupId>
                      <artifactId>css4j</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>info.informatica</groupId>
                      <artifactId>jclf</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <classes>
                    <class>info.informatica.doc.DocumentException</class>
                    <class>info.informatica.doc.RenderingException</class>
                  </classes>
                </exception>
                <!-- None of these should bundle org.w3c classes but at least they seem compatible.
                     See https://issues.apache.org/bugzilla/show_bug.cgi?id=49897,
                     https://issues.apache.org/bugzilla/show_bug.cgi?id=49206 and http://bugs.jython.org/issue2121 -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>org.apache.xmlgraphics</groupId>
                      <artifactId>batik-ext</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>xml-apis</groupId>
                      <artifactId>xml-apis</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <classes>
                    <class>org.w3c.dom.ElementTraversal</class>
                    <class>org.w3c.dom.events.DocumentEvent</class>
                    <class>org.w3c.dom.events.Event</class>
                    <class>org.w3c.dom.events.EventException</class>
                    <class>org.w3c.dom.events.EventListener</class>
                    <class>org.w3c.dom.events.EventTarget</class>
                    <class>org.w3c.dom.events.MouseEvent</class>
                    <class>org.w3c.dom.events.MutationEvent</class>
                    <class>org.w3c.dom.events.UIEvent</class>
                  </classes>
                </exception>
                <!-- This is a PITA. The classes are actually incompatible! We should do something about it but I
                     don't see a solution ATM... -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>org.w3c.css</groupId>
                      <artifactId>sac</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>xml-apis</groupId>
                      <artifactId>xml-apis-ext</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <packages>
                    <package>org.w3c.css.sac</package>
                  </packages>
                </exception>
                <!-- Logging shouldn't be configured by libraries! In any case since we route everything through
                     SLF4J, logging is configured by the SLF4J implementation used (e.g. Logback). -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>org.apache.axis</groupId>
                      <artifactId>axis</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>radeox</groupId>
                      <artifactId>radeox</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <resources>
                    <resource>simplelog.properties</resource>
                  </resources>
                </exception>
                <!-- The files are different but removing them would mean repackaging the JARs which is PITA.
                     Since the versions are the same for bc (1.52) there's a good chance the files are compatible. -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcmail-jdk15on</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcpkix-jdk15on</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcprov-jdk15on</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <resources>
                    <resource>META-INF/BCKEY.DSA</resource>
                    <resource>META-INF/BCKEY.SF</resource>
                  </resources>
                </exception>
                <!-- XStream includes both xapp and xmlpull and XAPP bundle somes classes of xmlpull.
                     See http://x-stream.github.io/jira/689/ for more.
                 -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>xmlpull</groupId>
                      <artifactId>xmlpull</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>xpp3</groupId>
                      <artifactId>xpp3_min</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>xpp3</groupId>
                      <artifactId>xpp3</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <packages>
                    <package>org.xmlpull</package>
                  </packages>
                </exception>
                <!-- Seems to be the same thing -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>xpp3</groupId>
                      <artifactId>xpp3</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>xml-apis</groupId>
                      <artifactId>xml-apis</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <packages>
                    <package>javax.xml.namespace</package>
                  </packages>
                </exception>
                <!-- Does not seems to be an issue -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>org.apache.cxf</groupId>
                      <artifactId>cxf-core</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.apache.cxf</groupId>
                      <artifactId>cxf-rt-transports-http</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <resources>
                    <resource>META-INF/cxf/bus-extensions.txt</resource>
                  </resources>
                </exception>
                <!-- Remove when http://jira.xwiki.org/browse/XCOMMONS-859 is closed -->
                <exception>
                  <conflictingDependencies>
                    <dependency>
                      <groupId>com.google.code.findbugs</groupId>
                      <artifactId>annotations</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>net.jcip</groupId>
                      <artifactId>jcip-annotations</artifactId>
                    </dependency>
                  </conflictingDependencies>
                  <classes>
                    <class>net.jcip.annotations.GuardedBy</class>
                    <class>net.jcip.annotations.Immutable</class>
                    <class>net.jcip.annotations.NotThreadSafe</class>
                    <class>net.jcip.annotations.ThreadSafe</class>
                  </classes>
                </exception>
              </exceptions>
              <ignoredResourcePatterns>
                <!-- Exclude XWiki's Component registration file -->
                <ignoredResourcePattern>META-INF/components.txt</ignoredResourcePattern>
                <!-- Several libs have a README file -->
                <ignoredResourcePattern>META-INF/README.txt</ignoredResourcePattern>
                <!-- Several libs have a RELEASENOTES file -->
                <ignoredResourcePattern>RELEASE_NOTES.TXT</ignoredResourcePattern>
                <!-- JAXB2 plugin resources. TODO: Exclude them from the XWiki JARs -->
                <ignoredResourcePattern>META-INF/sun-jaxb.episode</ignoredResourcePattern>
                <ignoredResourcePattern>simple.xjb</ignoredResourcePattern>
                <!-- JDOM resources -->
                <ignoredResourcePattern>META-INF/jdom-info.xml</ignoredResourcePattern>
                <!-- Sisu components -->
                <ignoredResourcePattern>META-INF/sisu/javax.inject.Named</ignoredResourcePattern>
                <!-- Eclipse projects generally contains about.html file -->
                <ignoredResourcePattern>about.html</ignoredResourcePattern>
                <!-- Usually contain licenses often having same file name -->
                <ignoredResourcePattern>license/.*.txt</ignoredResourcePattern>
                <!-- ApplicationResources.properties is duplicated but that's ok since it's how we want it work, see:
                     http://extensions.xwiki.org/xwiki/bin/view/Extension/Localization+Module#HProvidetranslationbundleinajar
                 -->
                <ignoredResourcePattern>ApplicationResources(_.*)?\.properties</ignoredResourcePattern>
                <!-- Apache karaf stuff -->
                <ignoredResourcePattern>features.xml</ignoredResourcePattern>
              </ignoredResourcePatterns>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>snapshotModules</id>
      <dependencies>
        <dependency>
          <groupId>com.xwikisas</groupId>
          <artifactId>xcs-repositories-snapshots</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
